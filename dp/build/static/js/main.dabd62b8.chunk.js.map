{"version":3,"sources":["DaysPager/UI/Button/Button.js","DaysPager/UI/Elements/CurrentDate.js","DaysPager/DaysPager.js","App.js","index.js"],"names":["button","props","classes","classStyle","join","react_default","a","createElement","onClick","click","className","children","currentDate","todayStyle","showCalendar","DaysPager","state","_this","dateFrom","dateTo","steps","prevStep","getDate","nextStep","onChangeCalendarHandler","date","setState","clickTodayHandler","Date","createStringDate","getDay","getMonth","getFullYear","showCalendarHandler","clickPagerHandler","step","newSteps","Object","objectSpread","newDate","setDate","prevProps","this","newDateFrom","newDateTo","newPrevStep","newNextStep","_this2","Button_Button","CurrentDate","entry_default","minDate","maxDate","onChange","value","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","Component","T1","console","log","T2","App","datesEdges","calendars","field","newCalendars","onChangeCalendar","newDatesEdges","src_DaysPager_DaysPager","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.dabd62b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = (props) => {\r\n    let classes = ['Button', props.classStyle ].join(' ');\r\n    return(\r\n        <button\r\n            onClick = {props.click}\r\n            className = {classes}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\nexport default button;\r\n","import React from 'react';\r\nimport './Elements.css';\r\n\r\nconst currentDate = (props) => {\r\n    return(\r\n        <div className='CurrentDate'>\r\n            <div\r\n                onClick = {props.click}\r\n                className = {'currentDateValue '+props.todayStyle}>\r\n                {props.currentDate}\r\n            </div>\r\n            <div className={props.showCalendar}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default currentDate;","import React, { Component } from 'react';\r\nimport Button from './UI/Button/Button';\r\nimport Calendar from 'react-calendar';\r\nimport CurrentDate from './UI/Elements/CurrentDate';\r\nimport './DaysPager.css';\r\n\r\n\r\n\r\nclass DaysPager extends Component {\r\n    state = {\r\n        currentDate: this.props.currentDate,\r\n        dateFrom: this.props.dateFrom,\r\n        dateTo: this.props.dateTo,\r\n        showCalendar: 'hide',\r\n        steps: {\r\n            prevStep: (this.props.currentDate.getDate() > this.props.dateFrom.getDate()) ? 'active' : '',\r\n            nextStep: (this.props.currentDate.getDate() < this.props.dateTo.getDate()) ? 'active' : ''\r\n        }\r\n        \r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.dateFrom !== this.props.dateFrom || prevProps.dateTo !== this.props.dateTo) {\r\n            let newDateFrom = (prevProps.dateFrom !== this.props.dateFrom) ? this.props.dateFrom : prevProps.dateFrom;\r\n            let newDateTo = (prevProps.dateTo !== this.props.dateTo) ? this.props.dateTo : prevProps.dateTo;\r\n            let newPrevStep = (this.state.currentDate.getDate() > newDateFrom.getDate()) ? 'active' : '';\r\n            let newNextStep = (this.state.currentDate.getDate() < newDateTo.getDate()) ? 'active' : '';\r\n\r\n            this.setState({\r\n                dateFrom: newDateFrom,\r\n                dateTo: newDateTo,\r\n                steps: {\r\n                    prevStep: newPrevStep,\r\n                    nextStep: newNextStep \r\n                }\r\n               \r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    onChangeCalendarHandler = (date) => {\r\n        this.setState({\r\n            currentDate: date,\r\n            showCalendar: 'hide',\r\n            steps: {\r\n                prevStep: ((date.getDate() - this.state.dateFrom.getDate()) > 0) ? 'active' : '',\r\n                nextStep: ((this.state.dateTo.getDate() - date.getDate()) > 0) ? 'active' : '' \r\n            }\r\n            \r\n        });\r\n    }\r\n    clickTodayHandler = () => {\r\n        this.setState({\r\n            currentDate: new Date()\r\n        });\r\n    }\r\n    createStringDate = (date) => {\r\n        const week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        //Thursday 30 August 2018\r\n        return week[date.getDay()] + ' ' + date.getDate() + ' ' + month[date.getMonth()] + ' ' + date.getFullYear();\r\n    }\r\n    showCalendarHandler = () => {\r\n        this.setState({\r\n            showCalendar: (this.state.showCalendar === 'hide') ? 'show' : 'hide'\r\n        });\r\n    }\r\n    clickPagerHandler = (step) => {\r\n        const actions = {\r\n            'nextStep': 1,\r\n            'prevStep': -1\r\n        };\r\n        if (this.state.steps[step] === 'active'){\r\n            let newSteps = {...this.state.steps};\r\n            let newDate = this.state.currentDate;\r\n            newDate.setDate(newDate.getDate() + 1 * actions[step]);\r\n\r\n            newSteps.prevStep = (newDate.getDate() > this.state.dateFrom.getDate()) ? 'active' : '';\r\n            newSteps.nextStep = (newDate.getDate() < this.state.dateTo.getDate()) ? 'active' : '';\r\n            this.setState({\r\n                currentDate: newDate,\r\n                steps: newSteps\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        let todayStyle = (this.state.currentDate.getDate() === (new Date()).getDate()) ? 'nowToday' : '';\r\n        return (\r\n            <div className='DaysPager'>\r\n                <Button\r\n                    classStyle={'today ' + todayStyle}\r\n                    click={this.clickTodayHandler}>Today</Button>\r\n\r\n                <Button\r\n                    classStyle={'prevDay ' + this.state.steps.prevStep}\r\n                    click={() => this.clickPagerHandler('prevStep')}>&nbsp;</Button>\r\n                <CurrentDate\r\n                    currentDate={this.createStringDate(this.state.currentDate)}\r\n                    showCalendar={this.state.showCalendar}\r\n                    click={this.showCalendarHandler}\r\n                    todayStyle = {todayStyle}>\r\n                    <Calendar\r\n                        minDate={this.state.dateFrom}\r\n                        maxDate={this.state.dateTo}\r\n                        onChange={(value) => this.onChangeCalendarHandler(value)}\r\n                        value={this.state.currentDate} />\r\n                </CurrentDate>\r\n                <Button\r\n                    classStyle={'nextDay ' + this.state.steps.nextStep}\r\n                    click={() => this.clickPagerHandler('nextStep')}>&nbsp;</Button>\r\n\r\n                <div className='timeZone'>\r\n                    <span>{Intl.DateTimeFormat().resolvedOptions().timeZone }</span>\r\n                    <span>{(new Date()).getTimezoneOffset()/60}</span>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\nexport default DaysPager;","import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport  './App.css';\nimport DaysPager from './DaysPager/DaysPager';\n\nconst T1 = new Date();\nT1.setDate(T1.getDate() - 2);\nconsole.log('T1  -- ' + T1);\n\nconst T2 = new Date();\nT2.setDate(T2.getDate() + 2);\nconsole.log('T2  -- ' + T2);\n\nclass App extends Component {\n\n\tstate = {\n\t\t//date: new Date(),\n\t\tdatesEdges: {\n\t\t\tdateFrom: T1,\n\t\t\tdateTo: T2\n\t\t},\n\t\tcalendars: {\n\t\t\tdateFrom: {\n\t\t\t\tshowCalendar: 'hide'\n\t\t\t},\n\t\t\tdateTo: {\n\t\t\t\tshowCalendar: 'hide'\n\t\t\t}\n\t\t}\n\n\t}\n\tcreateStringDate = (date) => {\n\t\tconst week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\t\tconst month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\t\treturn week[date.getDay()] + ' ' + date.getDate() + ' ' + month[date.getMonth()] + ' ' + date.getFullYear();\n\t}\n\tshowCalendarHandler = (field) => {\n\t\tconst newCalendars = { ...this.state.calendars };\n\t\tnewCalendars[field].showCalendar = (newCalendars[field].showCalendar === 'hide') ? 'show' : 'hide';\n\t\tthis.setState({\n\t\t\tcalendars: newCalendars\n\t\t});\n\t}\n\tonChangeCalendar = (field, date) => {\n\t\tconsole.log(field + '   ' + date);\n\t\tconst newDatesEdges = { ...this.state.datesEdges };\n\t\tnewDatesEdges[field] = date;\n\t\tconst newCalendars = { ...this.state.calendars };\n\t\tnewCalendars[field].showCalendar = 'hide';\n\t\tthis.setState({\n\t\t\tdatesEdges: newDatesEdges,\n\t\t\tcalendars: newCalendars\n\t\t});\n\t};\n\n\trender() {\n\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<div className='dateEdgeBlock'>\n\t\t\t\t\t<div className='dateEdgeElem'>\n\t\t\t\t\t\t<div onClick={() => this.showCalendarHandler('dateFrom')} className='dateValue'>\n\t\t\t\t\t\t\t{this.createStringDate(this.state.datesEdges.dateFrom)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={this.state.calendars.dateFrom.showCalendar}>\n\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\tonChange={(value) => this.onChangeCalendar('dateFrom', value)}\n\t\t\t\t\t\t\t\tvalue={this.state.datesEdges.dateFrom}\n\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='dateEdgeElem'>\n\t\t\t\t\t\t<div onClick={() => this.showCalendarHandler('dateTo')} className='dateValue'>\n\t\t\t\t\t\t\t{this.createStringDate(this.state.datesEdges.dateTo)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={this.state.calendars.dateTo.showCalendar}>\n\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\tonChange={(value) => this.onChangeCalendar('dateTo', value)}\n\t\t\t\t\t\t\t\tvalue={this.state.datesEdges.dateTo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<DaysPager dateFrom = {this.state.datesEdges.dateFrom} dateTo = {this.state.datesEdges.dateTo} currentDate = {new Date()}/>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}